@model SearchRoutesQueryModel

@{
    ViewBag.Title = "All Routes";
}

<form method="get">
    <div class="row mb-5">
        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Code"></label>
                <select asp-for="Code" class="form-control">
                    <option value="">All</option>
                    @foreach (var code in Model.Codes)
                    {
                        <option value="@code">@code</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0" selected>Route code</option>
                    <option value="1">Count of customers</option>
                </select>
            </div>
        </div>
    </div>
</form>

<div class="container">
    <div class="row">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">Route code</th>
                    <th class="text-center" scope="col">Customers in the route</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var route in Model.Routes)
                {
                    <tr>
                        <th scope="row">@route.Code route</th>
                        <td class="text-center">@route.Customers.Count</td>
                        <td>
                            <a asp-controller="Routes" asp-action="Details" asp-route-id="@route.Id" asp-route-information="@(route.Code)" class="btn btn-secondary float-right">More details</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@{
    if (!Model.Routes.Any())
    {
        <h2 class="text-center">No routes found by the given criteria.</h2>
    }
}

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalRoutes / SearchRoutesQueryModel.RoutesPerPage);
}

<div class="row">
    <div class="col-md-6">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-route-currentPage="@previousPage"
           asp-route-route="@Model.Code"
           asp-route-sorting="@((int)Model.Sorting)">Previous</a>
    </div>
    <div class="col-md-6">
        <a class="btn btn-primary float-right @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)"
           asp-controller="Routes"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-route="@Model.Code"
           asp-route-sorting="@((int)Model.Sorting)">Next</a>
    </div>
</div>